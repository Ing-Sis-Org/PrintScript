import ast.node.ASTNode
import ast.node.Assignation
import ast.node.BinaryTokenNode
import ast.node.Declaration
import ast.node.DeclarationInitialization
import ast.node.Value
import token.Location
import token.Token
import token.TokenType
class ASTs {
    fun ast1(): List<ASTNode> {
        return arrayListOf(
            Declaration(
                Token(
                    TokenType.IDENTIFIER,
                    Location(
                        0,
                        1
                    ),
                    "val1",
                    1
                ),
                Token(
                    TokenType.NUMBER_KEYWORD,
                    Location(
                        0,
                        2
                    ),
                    "Number",
                    1
                )
            )
        )
    }
    fun ast2(): List<ASTNode> {
        val ast: ArrayList<ASTNode> = ArrayList()
        ast.add(
            DeclarationInitialization(
                Declaration(
                    Token(
                        TokenType.IDENTIFIER,
                        Location(
                            0,
                            1
                        ),
                        "val1",
                        1
                    ),
                    Token(
                        TokenType.NUMBER_KEYWORD,
                        Location(
                            0,
                            2
                        ),
                        "Number",
                        1
                    )
                ),
                Value(
                    BinaryTokenNode(
                        Token(
                            TokenType.NUMBER_LITERAL,
                            Location(
                                0,
                                3
                            ),
                            "10",
                            1
                        ),
                        null,
                        null
                    )
                )
            )
        )
        return ast
    }
    fun ast3(): List<ASTNode> {
        return arrayListOf<ASTNode>(
            DeclarationInitialization(
                Declaration(
                    Token(
                        TokenType.IDENTIFIER,
                        Location(
                            0,
                            1
                        ),
                        "val1",
                        1
                    ),
                    Token(
                        TokenType.STRING_KEYWORD,
                        Location(
                            0,
                            2
                        ),
                        "String",
                        1
                    )
                ),
                Value(
                    BinaryTokenNode(
                        Token(
                            TokenType.OPERATOR_PLUS,
                            Location(
                                0,
                                4
                            ),
                            "+",
                            1
                        ),
                        BinaryTokenNode(
                            Token(
                                TokenType.STRING_LITERAL,
                                Location(
                                    0,
                                    3
                                ),
                                "10",
                                1
                            ),
                            null,
                            null
                        ),
                        BinaryTokenNode(
                            Token(
                                TokenType.STRING_LITERAL,
                                Location(
                                    0,
                                    5
                                ),
                                "10",
                                1
                            ),
                            null,
                            null
                        )
                    )
                )
            )
        )
    }
    fun ast4(): List<ASTNode> {
        return arrayListOf(
            Declaration(
                Token(
                    TokenType.IDENTIFIER,
                    Location(
                        0,
                        1
                    ),
                    "val1",
                    1
                ),
                Token(
                    TokenType.STRING_KEYWORD,
                    Location(
                        0,
                        2
                    ),
                    "",
                    1
                )
            ),
            Assignation(
                Token(
                    TokenType.IDENTIFIER,
                    Location(
                        0,
                        3
                    ),
                    "val1",
                    1
                ),
                Value(
                    BinaryTokenNode(
                        Token(
                            TokenType.OPERATOR_PLUS,
                            Location(
                                0,
                                4
                            ),
                            "+",
                            1
                        ),
                        BinaryTokenNode(
                            Token(
                                TokenType.OPERATOR_DIVIDE,
                                Location(
                                    0,
                                    3
                                ),
                                "10",
                                1
                            ),
                            BinaryTokenNode(
                                Token(
                                    TokenType.NUMBER_LITERAL,
                                    Location(
                                        0,
                                        5
                                    ),
                                    "10",
                                    1
                                ),
                                null,
                                null
                            ),
                            BinaryTokenNode(
                                Token(
                                    TokenType.NUMBER_LITERAL,
                                    Location(
                                        0,
                                        5
                                    ),
                                    "10",
                                    1
                                ),
                                null,
                                null
                            )
                        ),
                        BinaryTokenNode(
                            Token(
                                TokenType.STRING_LITERAL,
                                Location(
                                    0,
                                    5
                                ),
                                "10",
                                1
                            ),
                            null,
                            null
                        )
                    )
                )
            )
        )
    }
}
